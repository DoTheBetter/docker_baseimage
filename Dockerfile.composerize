# https://github.com/Oaklight/composerize-minimal
# Stage 1: Build composerize
FROM --platform=linux/amd64 node:alpine3.21 AS composerize

RUN apk add --update --no-cache npm git make bash && \
    rm -rf /var/cache/apk/* && \
    mkdir -p /opt/composerize && \
    git clone https://github.com/composerize/composerize.git /opt/composerize

WORKDIR /opt/composerize/packages/composerize-website
RUN sed -i "s,https://www.composerize.com,/,g" package.json && \
    sed -i "s,https://decomposerize.com,/decomposerize,g" src/components/Entry.js && \
    sed -i "s,http://composeverter.com,/composeverter,g" src/components/Entry.js && \
    npm install --legacy-peer-deps && \
    make build

# Stage 2: Build decomposerize
FROM --platform=linux/amd64 node:alpine3.21 AS decomposerize
RUN apk add --update --no-cache npm git make bash && \
    rm -rf /var/cache/apk/* && \
    mkdir -p /opt/decomposerize && \
    git clone https://github.com/composerize/decomposerize.git /opt/decomposerize

WORKDIR /opt/decomposerize/packages/decomposerize-website
RUN sed -i "s,https://www.decomposerize.com,/decomposerize,g" package.json && \
    sed -i "s,https://composerize.com,/,g" src/components/Entry.js && \
    sed -i "s,http://composeverter.com,/composeverter,g" src/components/Entry.js && \
    npm install --legacy-peer-deps && \
    make build

# Stage 3: Build composeverter
FROM --platform=linux/amd64 node:alpine3.21 AS composeverter
RUN apk add --update --no-cache npm git make bash && \
    rm -rf /var/cache/apk/* && \
    mkdir -p /opt/composeverter && \
    git clone https://github.com/outilslibre/composeverter.git /opt/composeverter

WORKDIR /opt/composeverter/packages/composeverter-website
RUN sed -i "s,https://www.composeverter.com,/composeverter,g" package.json && \
    sed -i "s,https://composerize.com,/,g" src/components/Entry.js && \
    sed -i "s,https://decomposerize.com,/decomposerize,g" src/components/Entry.js && \
    npm install --legacy-peer-deps && \
    make build

# Stage 4: Just the static binary
FROM alpine:3.21

# Copy built static files from previous stages
COPY --from=composerize /opt/composerize/packages/composerize-website/build/ /www/
COPY --from=decomposerize /opt/decomposerize/packages/decomposerize-website/build/ /www/decomposerize/
COPY --from=composeverter /opt/composeverter/packages/composeverter-website/build/ /www/composeverter/
RUN ls -R /www/